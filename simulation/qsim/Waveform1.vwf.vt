// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/27/2022 18:34:08"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          validacao_entrada_cedula
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module validacao_entrada_cedula_vlg_vec_tst();
// constants                                           
// general purpose registers
reg atividade;
reg [7:0] entrada_nota;
reg [2:0] erro;
reg [2:0] state_entrada;
reg time_out;
// wires                                               
wire clear;
wire [2:0] erro_code;
wire [7:0] nota;

// assign statements (if any)                          
validacao_entrada_cedula i1 (
// port map - connection between master ports and signals/registers   
	.atividade(atividade),
	.clear(clear),
	.entrada_nota(entrada_nota),
	.erro(erro),
	.erro_code(erro_code),
	.nota(nota),
	.state_entrada(state_entrada),
	.time_out(time_out)
);
initial 
begin 
#1000000 $finish;
end 

// atividade
initial
begin
	atividade = 1'b0;
end 
// entrada_nota[ 7 ]
initial
begin
	entrada_nota[7] = 1'b0;
end 
// entrada_nota[ 6 ]
initial
begin
	entrada_nota[6] = 1'b0;
end 
// entrada_nota[ 5 ]
initial
begin
	entrada_nota[5] = 1'b0;
end 
// entrada_nota[ 4 ]
initial
begin
	entrada_nota[4] = 1'b0;
end 
// entrada_nota[ 3 ]
initial
begin
	entrada_nota[3] = 1'b0;
end 
// entrada_nota[ 2 ]
initial
begin
	entrada_nota[2] = 1'b0;
end 
// entrada_nota[ 1 ]
initial
begin
	entrada_nota[1] = 1'b1;
end 
// entrada_nota[ 0 ]
initial
begin
	entrada_nota[0] = 1'b0;
end 
// erro[ 2 ]
initial
begin
	erro[2] = 1'b0;
end 
// erro[ 1 ]
initial
begin
	erro[1] = 1'b0;
end 
// erro[ 0 ]
initial
begin
	erro[0] = 1'b1;
end 
// state_entrada[ 2 ]
initial
begin
	state_entrada[2] = 1'b1;
end 
// state_entrada[ 1 ]
initial
begin
	state_entrada[1] = 1'b1;
end 
// state_entrada[ 0 ]
initial
begin
	state_entrada[0] = 1'b1;
end 

// time_out
initial
begin
	time_out = 1'b0;
end 
endmodule

